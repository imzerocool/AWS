{
    "Description": "Create instances ready for CodeDeploy: Create up to 3 Amazon EC2 instances with an associated instance profile and install the AWS CodeDeploy Agent. **WARNING** This template creates one or more Amazon EC2 instances. You will be billed for the AWS resources used if you create a stack from this template. Copyright [2012-2014] Amazon.com, Inc. or its affiliates. All Rights Reserved. Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with the License. A copy of the License is located at http://aws.amazon.com/apache2.0/ or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.",
    "AWSTemplateFormatVersion": "2010-09-09",
    "Parameters": {
        "TagKey": {
            "Description": "The EC2 tag key that identifies this as a target for deployments.",
            "Type": "String",
            "Default": "Name",
            "AllowedPattern": "[\\x20-\\x7E]*",
            "ConstraintDescription": "Can contain only ASCII characters."
        },
        "TagValue": {
            "Description": "The EC2 tag value that identifies this as a target for deployments.",
            "Type": "String",
            "Default": "CodeDeployDemo",
            "AllowedPattern": "[\\x20-\\x7E]*",
            "ConstraintDescription": "Can contain only ASCII characters."
        },
        "KeyPairName": {
            "Description": "Name of an existing Amazon EC2 key pair to enable SSH or RDP access to the instances.",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "255",
            "AllowedPattern": "[\\x20-\\x7E]*",
            "ConstraintDescription": "KeyPairName is a required Field and can contain only ASCII characters."
        },
        "InstanceType": {
            "Description": "Amazon EC2 instance type.",
            "Type": "String",
            "Default": "t1.micro",
            "ConstraintDescription": "Must be a valid Amazon EC2 instance type."
        },
        "InstanceCount": {
            "Description": "Number of Amazon EC2 instances (Must be a number between 1 and 3).",
            "Type": "Number",
            "Default": "1",
            "ConstraintDescription": "Must be a number between 1 and 3.",
            "MinValue": "1",
            "MaxValue": "3"
        },
        "OperatingSystem": {
            "Description": "Amazon EC2 operating system type (Linux or Windows).",
            "Type": "String",
            "Default": "Linux",
            "ConstraintDescription": "Must be Windows or Linux.",
            "AllowedValues": [
                "Linux",
                "Windows"
            ]
        },
        "SSHLocation": {
            "Description": "The IP address range that can be used to connect using SSH or RDP to the Amazon EC2 instances.",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "18",
            "Default": "0.0.0.0/0",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x."
        }
    },
    "Mappings": {
        "RegionOS2AMI": {
            "us-east-1": {
                "Linux": "ami-7c807d14",
                "Windows": "ami-ac3a1cc4"
            },
            "us-west-2": {
                "Linux": "ami-1b3b462b",
                "Windows": "ami-7f634e4f"
            },
            "eu-west-1": {
                "Linux": "ami-672ce210",
                "Windows": "ami-032b4b74"
            },
            "ap-southeast-2": {
                "Linux": "ami-6bf99c51",
                "Windows": "ami-a9077a93"
            }
        },
        "OS2SSHPort": {
            "Linux": {
                "SSHPort": "22"
            },
            "Windows": {
                "SSHPort": "3389"
            }
        }
    },
    "LaunchLinuxEC2Instance3": {
            "Fn::Equals": [
                {
                    "Ref": "OperatingSystem"
                },
                "Linux"
            ]
        },
  

    "Resources": {
        "WaitHandle": {
            "Type": "AWS::CloudFormation::WaitConditionHandle",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "b267fdd7-1495-4cb5-90c7-0c4286e41489"
                }
            }
        },
        "WaitCondition": {
            "Type": "AWS::CloudFormation::WaitCondition",
            "Properties": {
                "Count": {
                    "Ref": "InstanceCount"
                },
                "Handle": {
                    "Ref": "WaitHandle"
                },
                "Timeout": "900"
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "3674a551-e9fa-499b-a7ff-7b72ec55d754"
                }
            }
        },
        "SecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enable HTTP access via port 80 and SSH access.",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": {
                            "Fn::FindInMap": [
                                "OS2SSHPort",
                                {
                                    "Ref": "OperatingSystem"
                                },
                                "SSHPort"
                            ]
                        },
                        "ToPort": {
                            "Fn::FindInMap": [
                                "OS2SSHPort",
                                {
                                    "Ref": "OperatingSystem"
                                },
                                "SSHPort"
                            ]
                        },
                        "CidrIp": {
                            "Ref": "SSHLocation"
                        }
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "57760cc0-9883-43d9-ad04-c2d92562aa6f"
                }
            }
        },
        "CodeDeployTrustRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Sid": "1",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "codedeploy.us-east-1.amazonaws.com",
                                    "codedeploy.us-west-2.amazonaws.com",
                                    "codedeploy.eu-west-1.amazonaws.com",
                                    "codedeploy.ap-southeast-2.amazonaws.com"
                                ]
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "Path": "/"
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "73b05b58-40db-427d-a799-aed8a895b754"
                }
            }
        },
        "CodeDeployRolePolicies": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": "CodeDeployPolicy",
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Resource": [
                                "*"
                            ],
                            "Action": [
                                "ec2:Describe*"
                            ]
                        },
                        {
                            "Effect": "Allow",
                            "Resource": [
                                "*"
                            ],
                            "Action": [
                                "autoscaling:CompleteLifecycleAction",
                                "autoscaling:DeleteLifecycleHook",
                                "autoscaling:DescribeLifecycleHooks",
                                "autoscaling:DescribeAutoScalingGroups",
                                "autoscaling:PutLifecycleHook",
                                "autoscaling:RecordLifecycleActionHeartbeat"
                            ]
                        }
                    ]
                },
                "Roles": [
                    {
                        "Ref": "CodeDeployTrustRole"
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "407d7db0-c7cc-485d-aa92-fa75585cf49c"
                }
            }
        },
        "InstanceRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/"
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "b8d0e11c-0734-49d3-9834-30fa4a0754ba"
                }
            }
        },
        "InstanceRolePolicies": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": "InstanceRole",
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "autoscaling:Describe*",
                                "cloudformation:Describe*",
                                "cloudformation:GetTemplate",
                                "s3:Get*"
                            ],
                            "Resource": "*"
                        }
                    ]
                },
                "Roles": [
                    {
                        "Ref": "InstanceRole"
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "d8c6c5f4-1d34-43c6-bcea-346f461e4f41"
                }
            }
        },
        "InstanceRoleInstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "InstanceRole"
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "3e42fe48-775a-4cdb-be9d-7ad4a4d94dd8"
                }
            }
        },
        "LinuxEC2Instance3": {
            "Type": "AWS::EC2::Instance",
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "services": {
                        "sysvint": {
                            "codedeploy-agent": {
                                "enabled": "true",
                                "ensureRunning": "true"
                            }
                        }
                    }
                },
                "AWS::CloudFormation::Designer": {
                    "id": "ab91ed87-89b4-4cb6-bf1d-84eabf00ae1d"
                }
            },
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "RegionOS2AMI",
                        {
                            "Ref": "AWS::Region"
                        },
                        {
                            "Ref": "OperatingSystem"
                        }
                    ]
                },
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "SecurityGroups": [
                    {
                        "Ref": "SecurityGroup"
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -ex\n",
                                "yum update -y aws-cfn-bootstrap\n",
                                "yum install -y aws-cli\n",
                                "# Helper function.\n",
                                "function error_exit\n",
                                "{\n",
                                "  /opt/aws/bin/cfn-signal -e 1 -r \"$1\" '",
                                {
                                    "Ref": "WaitHandle"
                                },
                                "'\n",
                                "  exit 1\n",
                                "}\n",
                                "# Install the AWS CodeDeploy Agent.\n",
                                "cd /home/ec2-user/\n",
                                "aws s3 cp 's3://aws-codedeploy-us-east-1/latest/codedeploy-agent.noarch.rpm' . || error_exit 'Failed to download AWS CodeDeploy Agent.'\n",
                                "yum -y install codedeploy-agent.noarch.rpm || error_exit 'Failed to install AWS CodeDeploy Agent.' \n",
                                "/opt/aws/bin/cfn-init -s ",
                                {
                                    "Ref": "AWS::StackId"
                                },
                                " -r LinuxEC2Instance --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                " || error_exit 'Failed to run cfn-init.'\n",
                                "# All is well, so signal success.\n",
                                "/opt/aws/bin/cfn-signal -e 0 -r \"AWS CodeDeploy Agent setup complete.\" '",
                                {
                                    "Ref": "WaitHandle"
                                },
                                "'\n"
                            ]
                        ]
                    }
                },
                "KeyName": {
                    "Ref": "KeyPairName"
                },
                "Tags": [
                    {
                        "Key": {
                            "Ref": "TagKey"
                        },
                        "Value": {
                            "Ref": "TagValue"
                        }
                    }
                ],
                "IamInstanceProfile": {
                    "Ref": "InstanceRoleInstanceProfile"
                }
            }
        }
    },
    "Outputs": {
        "CodeDeployTrustRoleARN": {
            "Value": {
                "Fn::GetAtt": [
                    "CodeDeployTrustRole",
                    "Arn"
                ]
            }
        }
    },
    "Metadata": {
        "AWS::CloudFormation::Designer": {
            "b8d0e11c-0734-49d3-9834-30fa4a0754ba": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 60,
                    "y": 90
                },
                "z": 1,
                "embeds": []
            },
            "3e42fe48-775a-4cdb-be9d-7ad4a4d94dd8": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 180,
                    "y": 90
                },
                "z": 1,
                "embeds": [],
                "isassociatedwith": [
                    "b8d0e11c-0734-49d3-9834-30fa4a0754ba"
                ]
            },
            "d8c6c5f4-1d34-43c6-bcea-346f461e4f41": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 60,
                    "y": 210
                },
                "z": 1,
                "embeds": [],
                "isassociatedwith": [
                    "b8d0e11c-0734-49d3-9834-30fa4a0754ba"
                ]
            },
            "73b05b58-40db-427d-a799-aed8a895b754": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 180,
                    "y": 210
                },
                "z": 1,
                "embeds": []
            },
            "407d7db0-c7cc-485d-aa92-fa75585cf49c": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 300,
                    "y": 90
                },
                "z": 1,
                "embeds": [],
                "isassociatedwith": [
                    "73b05b58-40db-427d-a799-aed8a895b754"
                ]
            },
            "57760cc0-9883-43d9-ad04-c2d92562aa6f": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 300,
                    "y": 210
                },
                "z": 1,
                "embeds": []
            },
            "b267fdd7-1495-4cb5-90c7-0c4286e41489": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 300,
                    "y": 330
                },
                "z": 1,
                "embeds": []
            },
            "ab91ed87-89b4-4cb6-bf1d-84eabf00ae1d": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 420,
                    "y": 90
                },
                "z": 1,
                "embeds": [],
                "ismemberof": [
                    "57760cc0-9883-43d9-ad04-c2d92562aa6f"
                ],
                "isrelatedto": [
                    "b267fdd7-1495-4cb5-90c7-0c4286e41489",
                    "3e42fe48-775a-4cdb-be9d-7ad4a4d94dd8"
                ]
            },
            "3674a551-e9fa-499b-a7ff-7b72ec55d754": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 420,
                    "y": 330
                },
                "z": 1,
                "embeds": [],
                "references": [
                    "b267fdd7-1495-4cb5-90c7-0c4286e41489"
                ]
            }
        }
    }
